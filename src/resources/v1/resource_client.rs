/// Generated by Sideko (sideko.dev)
#[derive(Clone, Debug)]
pub struct V1Client {
    base_client: crate::core::base_client::BaseClient,
}
impl V1Client {
    pub(crate) fn new(base_client: crate::core::base_client::BaseClient) -> Self {
        Self { base_client }
    }
    pub fn image_projects(
        &self,
    ) -> crate::resources::v1::image_projects::resource_client::ImageProjectsClient {
        crate::resources::v1::image_projects::resource_client::ImageProjectsClient::new(
            self.base_client.clone(),
        )
    }
    pub fn video_projects(
        &self,
    ) -> crate::resources::v1::video_projects::resource_client::VideoProjectsClient {
        crate::resources::v1::video_projects::resource_client::VideoProjectsClient::new(
            self.base_client.clone(),
        )
    }
    pub fn ai_headshot_generator(
        &self,
    ) -> crate::resources::v1::ai_headshot_generator::resource_client::AiHeadshotGeneratorClient {
        crate::resources::v1::ai_headshot_generator::resource_client::AiHeadshotGeneratorClient::new(
            self.base_client.clone(),
        )
    }
    pub fn ai_image_generator(
        &self,
    ) -> crate::resources::v1::ai_image_generator::resource_client::AiImageGeneratorClient {
        crate::resources::v1::ai_image_generator::resource_client::AiImageGeneratorClient::new(
            self.base_client.clone(),
        )
    }
    pub fn face_swap(
        &self,
    ) -> crate::resources::v1::face_swap::resource_client::FaceSwapClient {
        crate::resources::v1::face_swap::resource_client::FaceSwapClient::new(
            self.base_client.clone(),
        )
    }
    pub fn face_swap_photo(
        &self,
    ) -> crate::resources::v1::face_swap_photo::resource_client::FaceSwapPhotoClient {
        crate::resources::v1::face_swap_photo::resource_client::FaceSwapPhotoClient::new(
            self.base_client.clone(),
        )
    }
    pub fn files(&self) -> crate::resources::v1::files::resource_client::FilesClient {
        crate::resources::v1::files::resource_client::FilesClient::new(
            self.base_client.clone(),
        )
    }
    pub fn image_to_video(
        &self,
    ) -> crate::resources::v1::image_to_video::resource_client::ImageToVideoClient {
        crate::resources::v1::image_to_video::resource_client::ImageToVideoClient::new(
            self.base_client.clone(),
        )
    }
    pub fn lip_sync(
        &self,
    ) -> crate::resources::v1::lip_sync::resource_client::LipSyncClient {
        crate::resources::v1::lip_sync::resource_client::LipSyncClient::new(
            self.base_client.clone(),
        )
    }
    pub fn text_to_video(
        &self,
    ) -> crate::resources::v1::text_to_video::resource_client::TextToVideoClient {
        crate::resources::v1::text_to_video::resource_client::TextToVideoClient::new(
            self.base_client.clone(),
        )
    }
    pub fn video_to_video(
        &self,
    ) -> crate::resources::v1::video_to_video::resource_client::VideoToVideoClient {
        crate::resources::v1::video_to_video::resource_client::VideoToVideoClient::new(
            self.base_client.clone(),
        )
    }
}
